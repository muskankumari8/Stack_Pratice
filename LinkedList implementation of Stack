import java.util.*;
public class LinkedList_Stacks {
        public static class Node{ // user defined data type
            int data;
            Node next;
            Node(int data){
                this.data=data;
                this.next=null;
            }
        }
        public static class LLStack{  // user defined data structure
            private Node head = null;
            private int size = 0;
            void push(int x){
                Node newNode = new Node(x);
                newNode.next = head;
                head = newNode;
                size++;
            }
            void displayrec(Node h){
                if(h == null) return;
                displayrec(h.next);
                System.out.print(h.data+" ");
            }
            void display(){
                displayrec(head);
                System.out.println();
            }
            void displayrev(){
                Node temp = head;
                while(temp != null){
                    System.out.print(temp.data+" ");
                    temp = temp.next;
                }
                System.out.println();
            }
            int size(){
                return size;
            }
            int pop(){
                if(head == null){
                    System.out.println("Stack is empty!");
                    return -1;
                }
                int top = head.data;
                head = head.next;
                size--;
                return top;
            }
            int peek(){
                if(head == null){
                    System.out.println("Stack is empty!");
                    return -1;
                }
                return head.data;
            }
            boolean isEmpty(){
                if(size==0) return true;
                return false;
            }
        }
    public static void main(String[] args) {
        LLStack st = new LLStack();
        st.push(5);
        st.display();
        st.push(8);
        st.display();
        st.push(3);
        st.display();
        st.push(9);
        st.display();
        st.push(10);
        st.display();
        System.out.println(st.size());
        st.pop();
        st.display();
        System.out.println(st.size());
        st.push(11);
        st.push(19);
    }
}
